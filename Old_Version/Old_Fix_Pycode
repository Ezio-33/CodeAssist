#!/bin/bash

# Fonction pour vérifier si les outils nécessaires sont installés
check_tools() {
    local missing_tools=()
    
    for tool in autopep8 flake8 pycodestyle; do
        if ! command -v "$tool" &> /dev/null; then
            missing_tools+=("$tool")
        fi
    done
    
    if [ ${#missing_tools[@]} -ne 0 ]; then
        echo -e "\033[1;31mErreur : Les outils suivants ne sont pas installés :\033[0m"
        printf ' - %s\n' "${missing_tools[@]}"
        echo -e "\033[1;33mVeuillez exécuter le script Install_Script pour les installer.\033[0m"
        exit 1
    fi
}

# Fonction pour vérifier s'il y a des fichiers Python
check_python_files() {
    if ! ls *.py 1> /dev/null 2>&1; then
        echo -e "\033[1;33mAucun fichier Python (.py) trouvé dans ce répertoire.\033[0m"
        exit 0
    fi
}

# Vérifications préliminaires
check_tools
check_python_files

echo -e "\033[1;34m=== Correction et vérification des fichiers Python ===\033[0m"

# Vérifie et ajoute un saut de ligne à la fin des fichiers .py si nécessaire
echo -e "\033[1;36mVérification des sauts de ligne finaux...\033[0m"
for file in *.py; do
    if [ -f "$file" ]; then
        # Vérifie si le fichier ne se termine pas par un saut de ligne
        if [ -s "$file" ] && [ $(tail -c 1 "$file" | wc -l) -eq 0 ]; then
            echo "  ✓ Ajout d'un saut de ligne à la fin du fichier $file"
            echo "" >> "$file"
        fi
    fi
done

# Correction automatique avec autopep8 (exclusion des fichiers main)
echo -e "\033[1;36mCorrection automatique avec autopep8...\033[0m"
for file in *.py; do
    if [ -f "$file" ] && [[ "$file" != *"main"* ]]; then
        echo "  ✓ Correction de $file"
        if ! autopep8 --in-place --aggressive --aggressive "$file"; then
            echo -e "\033[1;31m  ✗ Erreur lors de la correction de $file\033[0m"
        fi
    fi
done

# Vérification avec flake8 (exclusion des fichiers main)
echo -e "\033[1;36mVérification avec flake8...\033[0m"
flake8_errors=0
for file in *.py; do
    if [ -f "$file" ] && [[ "$file" != *"main"* ]]; then
        echo "  ✓ Vérification de $file"
        if ! flake8 "$file"; then
            flake8_errors=$((flake8_errors + 1))
        fi
    fi
done

# Vérification finale avec pycodestyle (exclusion des fichiers main)
echo -e "\033[1;36mVérification finale avec pycodestyle...\033[0m"
pycodestyle_errors=0
for file in *.py; do
    if [ -f "$file" ] && [[ "$file" != *"main"* ]]; then
        echo "  ✓ Vérification style de $file"
        if ! pycodestyle "$file"; then
            pycodestyle_errors=$((pycodestyle_errors + 1))
        fi
    fi
done

# Résumé final
echo -e "\033[1;34m=== Résumé ===\033[0m"
if [ $flake8_errors -eq 0 ] && [ $pycodestyle_errors -eq 0 ]; then
    echo -e "\033[1;32m✓ Tous les fichiers Python respectent les standards de style !\033[0m"
else
    echo -e "\033[1;33m⚠ Des erreurs de style ont été détectées :\033[0m"
    if [ $flake8_errors -gt 0 ]; then
        echo -e "  - Flake8 : $flake8_errors fichier(s) avec des erreurs"
    fi
    if [ $pycodestyle_errors -gt 0 ]; then
        echo -e "  - Pycodestyle : $pycodestyle_errors fichier(s) avec des erreurs"
    fi
    echo -e "\033[1;33mVeuillez corriger manuellement les erreurs restantes.\033[0m"
fi
