#!/bin/bash

CLEAR_LINE=$(tput cuu1 && tput el)
EXIT_MSG=$(tput bold;tput setaf 2; echo "$CLEAR_LINE Programme terminé.";tput sgr0)

# Liste des extensions de fichier informatique courantes
VALID_EXTENSIONS=("sh" "py" "txt" "java" "c" "cpp" "js" "html" "css" "rb" "php" "go" "rs" "swift" "kt" "ts" "h")

# Fonction pour vérifier si une extension est valide
is_valid_extension() {
    local ext="$1"
    for valid_ext in "${VALID_EXTENSIONS[@]}"; do
        if [ "$ext" == "$valid_ext" ]; then
            return 0
        fi
    done
    return 1
}

echo "Entrez le nom du projet :"
read -e nom_projet

if [ "$nom_projet" == "exit" ]; then
    echo "$EXIT_MSG"
    exit 0
fi
touch "README.md"
echo "# $nom_projet" > README.md

echo "Combien de fichiers voulez-vous créer ? (decompte a partir de 0)"
read -e nb_fichiers

# Vérification que l'entrée est un nombre positif
while ! [[ "$nb_fichiers" =~ ^[0-9]+$ ]] || [ "$nb_fichiers" -le 0 ]; do
    if [ "$nb_fichiers" == "exit" ]; then
        echo "$EXIT_MSG"
        exit 0
    fi
    echo -e "$CLEAR_LINE\033[1;31mErreur, veuillez entrer un nombre positif.\033[0m"
    echo "Combien de fichiers voulez-vous créer ?"
    read -e nb_fichiers
done

echo "Entrez l'extension des fichiers (par exemple, py, txt, etc.) :"
read -e extension
if [ "$extension" == "exit" ]; then
    echo "$EXIT_MSG"
    exit 0
fi

# Vérification de l'extension par défaut
while ! is_valid_extension "$extension"; do
    echo -e "$CLEAR_LINE\033[1;31mErreur, veuillez entrer une extension de fichier valide.\033[0m"
    echo "Entrez l'extension des fichiers (par exemple, py, txt, etc.) :"
    read -e extension
    if [ "$extension" == "exit" ]; then
        echo "$EXIT_MSG"
        exit 0
    fi
done

while true; do
    echo "Voulez-vous créer des fichiers de test ? (O/N)"
    read -e creer_tests

    if [ "$creer_tests" == "exit" ]; then
        echo "$EXIT_MSG"
        exit 0
    fi

    creer_tests=$(echo "$creer_tests" | tr '[:upper:]' '[:lower:]') # Convertir en minuscules

    if [ "$creer_tests" != "o" ] && [ "$creer_tests" != "n" ]; then
        echo "$CLEAR_LINE"
        echo -e "\033[1;31mErreur, veuillez choisir entre \"O\" pour oui et \"N\" pour non.\033[0m"
        echo ""
    else
        break
    fi
done

while true; do
    echo "Voulez-vous créer des fichiers main.$extension ? (O/N)"
    read -e creer_main

    if [ "$creer_main" == "exit" ]; then
        echo "$EXIT_MSG"
        exit 0
    fi

    creer_main=$(echo "$creer_main" | tr '[:upper:]' '[:lower:]') # Convertir en minuscules

    if [ "$creer_main" != "o" ] && [ "$creer_main" != "n" ]; then
        echo "$CLEAR_LINE"
        echo -e "\033[1;31mErreur, veuillez choisir entre \"O\" pour oui et \"N\" pour non.\033[0m"
        echo ""
    else
        break
    fi
done

for ((i=0; i<$nb_fichiers; i++))
do
    echo "Entrez le nom du fichier $i (sans l'extension) :"
    read -e nom_fichier

    if [ "$nom_fichier" == "exit" ]; then
        echo "$EXIT_MSG"
        exit 0
    fi

    # Vérifier si le nom de fichier contient une extension
    if [[ "$nom_fichier" == *.* ]]; then
        fichier="$nom_fichier"
        ext="${nom_fichier##*.}"
        if ! is_valid_extension "$ext"; then
            echo -e "$CLEAR_LINE\033[1;31mErreur, l'extension $ext n'est pas valide.\033[0m"
            exit 1
        fi
    else
        fichier="$nom_fichier.$extension"
    fi

    touch "$fichier"
    chmod u+x "$fichier"

    if [ "$creer_tests" == "o" ]; then
        mkdir -p tests
        touch "tests/$nom_fichier.txt"
        chmod u+x "tests/$nom_fichier.txt"
    fi

    if [ "$creer_main" == "o" ]; then
        main_fichier="$i-main.$extension"
        touch "$main_fichier"
        chmod u+x "$main_fichier"
    fi
done